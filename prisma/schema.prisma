// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// User model
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  workouts WorkoutSession[]

  @@map("users")
}

// Workout model
model Workout {
  id          String   @id @default(cuid())
  name        String
  description String?
  exercises   Json     // Store exercises as JSON for flexibility
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  sessions WorkoutSession[]

  @@map("workouts")
}

// Workout Session model
model WorkoutSession {
  id         String   @id @default(cuid())
  userId     String
  workoutId  String
  startTime  DateTime @default(now())
  endTime    DateTime?
  duration   Int?     // Duration in seconds
  exercises  Json     // Store completed exercises with sets/reps/weights
  notes      String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  workout Workout @relation(fields: [workoutId], references: [id], onDelete: Cascade)

  @@map("workout_sessions")
}
